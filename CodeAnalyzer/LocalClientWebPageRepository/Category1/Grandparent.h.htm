<!--
Grandparent.h.htm- Html file for Grandparent.h
 Published: 4th April 2017 
Nikhil Prashar, CSE687 - Object Oriented Design, Spring 2017
-->
<html>
<!--
HtmlHeader.htm- Common html header file.
 Published: 4th April 2017 
Nikhil Prashar, CSE687 - Object Oriented Design, Spring 2017
-->
<head>
<link rel = "stylesheet" href = "../../ScriptingFiles/styles.css" />
<script src="../../ScriptingFiles/JavaScriptFile.js"></script>
</head>
<body>
<table id="myTable" style="border:0"><tr><th style="border:0"><h1>Grandparent.h</h1></th><th style="border:0"><h3 align="right"><a href="index.htm">Back to Table Of Contents</a></h3></th></tr></table><hr />
<div class="indent">
<h4>dependencies:</h4>
<a href="Child.h.htm">Child.h</a>
<a href="Child2.h.htm">Child2.h</a>
<a href="Test.cpp.htm">Test.cpp</a>
</div>
<hr />
<pre>
#ifndef GP_H
#define GP_H

#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;map&gt;
#include "Child.h"
using namespace ChildTest;

typedef std::string str;

<button onClick = "myFunction('1','button1')" id="button1">-</button>class GrandParent {<span id="1">
public:
<button onClick = "myFunction('2','button2')" id="button2">-</button>	GrandParent() {<span id="2"></span>};
<button onClick = "myFunction('3','button3')" id="button3">-</button>	~GrandParent() {<span id="3"></span>};
	int GPmethod2();
	int GPmethod3();
private:
	Child child;
</span>};

<button onClick = "myFunction('4','button4')" id="button4">-</button>int GrandParent::GPmethod2() {<span id="4"> 
	child.method2();
	return -1; 
</span>}


<button onClick = "myFunction('5','button5')" id="button5">-</button>static void globalFunction2() {<span id="5">
	std::cout &lt;&lt; "\n Global Function";
</span>}

#endif

</pre>
</body>
</html>